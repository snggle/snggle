plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def customCompileSdkVersion = localProperties.getProperty('flutter.compileSdkVersion')
if (customCompileSdkVersion == null) {
    customCompileSdkVersion = flutter.compileSdkVersion
}

def customNdkVersion = localProperties.getProperty('flutter.ndkVersion')
if (customNdkVersion == null) {
    customNdkVersion = flutter.ndkVersion
}

def customMinSdkVersion = localProperties.getProperty('flutter.minSdkVersion')
if (customMinSdkVersion == null) {
    customMinSdkVersion = flutter.minSdkVersion
}

def customTargetSdkVersion = localProperties.getProperty('flutter.targetSdkVersion')
if (customTargetSdkVersion == null) {
    customTargetSdkVersion = flutter.targetSdkVersion
}

android {
    compileSdkVersion customCompileSdkVersion
    ndkVersion customNdkVersion


    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.snggle.mobile"
        minSdkVersion customMinSdkVersion
        targetSdkVersion customTargetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }
    buildToolsVersion '30.0.3'
    namespace 'com.snggle.mobile'
}

flutter {
    source '../..'
}